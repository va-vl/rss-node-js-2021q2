/**
 * Task model
 * @module task/model
 */
const uuid = require('uuid');

/**
 *  JavaScript object containing properties for the Task instance
 * @typedef {Object} taskProps
 * @property {String} [id] - Task id (auto-generated by uuid by default)
 * @property {String} [title="Task Title"] - Task title
 * @property {String} [title="A default task description"] - Task description
 * @property {String|null} [userId=null] - id of a User assigned to the Task
 * @property {String|null} [boardId=null] - id of a Board this Task belongs to
 * @property {String|null} [columnId=null] - id of a Column this Task belongs to
 * @property {Number} [order=0] - order of this Task in the Column
 */

/** Class representing a task */
class Task {
  /**
   * @param {taskProps} props - an object containing Task properties
   */
  constructor({
    id = uuid.v4(),
    title = 'Task Title',
    description = 'A default task description',
    userId = null,
    boardId = null,
    columnId = null,
    order = 0,
  } = {}) {
    /**
     * @property {String} id - id
     */
    this.id = id;
    /**
     * @property {String} title - title
     */
    this.title = title;
    /**
     * @property {String} description - description
     */
    this.description = description;
    /**
     * @property {String|null} userId - id of the user assigned to this Task instance
     */
    this.userId = userId;
    /**
     * @property {String|null} boardId - id of the board this Task instance belongs to
     */
    this.boardId = boardId;
    /**
     * @property {String|null} columnId - id of the column this Task instance belongs to
     */
    this.columnId = columnId;
    /**
     * @property {Number} order - order of this Task within its Column
     */
    this.order = order;
  }

  /**
   * @param {Task} task
   * @returns {Object}
   */
  static toResponse(task) {
    const { id, title, order, description, userId, boardId, columnId } = task;

    return {
      id,
      title,
      order,
      description,
      userId,
      boardId,
      columnId,
    };
  }
}

module.exports = Task;
