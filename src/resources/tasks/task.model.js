/**
 * Task model
 * @module task/model
 */
const uuid = require('uuid');

/**
 * Task instance type
 * @typedef {Object} Task
 * @property {String} id id
 * @property {String} title title
 * @property {String} description description
 * @property {String|null} userId id of the user assigned to this instance
 * @property {String|null} boardId id of the board this instance belongs to
 * @property {String|null} columnId id of the column this instance belongs to
 * @property {Number} order order of this instance within its Column
 */

/** Class representing a task */
class Task {
  /**
   * Creates a Task instance
   * @type {Task}
   * @param {Object} [props] an object containing Task properties
   * @param {String} [props.id] task id (auto-generated by uuid by default)
   * @param {String} [props.title="Task Title"] task title
   * @param {String} [props.description="A default task description"] task description
   * @param {String|null} [props.userId=null] id of a User assigned to this task
   * @param {String|null} [props.boardId=null] id of a Board this task belongs to
   * @param {String|null} [props.columnId=null] id of a Column this task belongs to
   * @param {Number} [props.order=0] order of this task in the Column
   */
  constructor({
    id = uuid.v4(),
    title = 'Task Title',
    description = 'A default task description',
    userId = null,
    boardId = null,
    columnId = null,
    order = 0,
  } = {}) {
    this.id = id;
    this.title = title;
    this.description = description;
    this.userId = userId;
    this.boardId = boardId;
    this.columnId = columnId;
    this.order = order;
  }

  /**
   * Strips provided taskInstance to basic properties and returns as a JS object
   * @param {Task} taskInstance task instance
   * @returns {Object} simple JavaScript object
   */
  static toResponse(task) {
    const { id, title, order, description, userId, boardId, columnId } = task;

    return {
      id,
      title,
      order,
      description,
      userId,
      boardId,
      columnId,
    };
  }
}

module.exports = Task;
